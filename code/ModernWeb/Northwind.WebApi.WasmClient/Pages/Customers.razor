@attribute [StreamRendering]
@page "/customers/{country?}"
@inject HttpClient Http
<h3>
  Customers @(string.IsNullOrWhiteSpace(Country)
    ? "Worldwide" : "in " + Country)
</h3>
@if (customers is null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>Id</th>
        <th>Company Name</th>
        <th>Address</th>
        <th>Phone</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      @foreach (Customer c in customers)
      {
        <tr>
          <td>@c.CustomerId</td>
          <td>@c.CompanyName</td>
          <td>
            @c.Address<br />
            @c.City<br />
            @c.PostalCode<br />
            @c.Country
          </td>
          <td>@c.Phone</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  [Parameter]
  public string? Country { get; set; }

  private IEnumerable<Customer>? customers;

  protected override async Task OnParametersSetAsync()
  {
    if (string.IsNullOrWhiteSpace(Country))
    {
      customers = await Http.GetFromJsonAsync<Customer[]>(
        "/customers");
    }
    else
    {
      customers = await Http.GetFromJsonAsync<Customer[]>(
        $"/customers/in/{Country}");
    }
  }
}
